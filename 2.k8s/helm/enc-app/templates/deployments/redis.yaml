{{- if eq (include "enc-app.shouldDeployRedis" .) "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.redis.name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.redis.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.name }}
    spec:
      containers:
      - name: {{ .Values.redis.name }}
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.redis.service.targetPort }}
        resources:
          {{- include "enc-app.getResources" .Values.viewService.resources | nindent 10 }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.redis.service.targetPort }}
          initialDelaySeconds: {{ .Values.redis.probes.initialDelaySeconds }}
          periodSeconds: {{ .Values.redis.probes.periodSeconds }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.redis.service.targetPort }}
          initialDelaySeconds: {{ .Values.redis.probes.initialDelaySeconds }}
          periodSeconds: {{ .Values.redis.probes.periodSeconds }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
{{- end }}