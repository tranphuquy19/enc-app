services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: tranphuquy19/enc-app-api-gateway:latest
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    networks:
      - microservices-network

  hello-service:
    build:
      context: ./hello-service
      dockerfile: Dockerfile
    image: tranphuquy19/enc-app-hello-service:latest
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

  view-service:
    build:
      context: ./view-service
      dockerfile: Dockerfile
    image: tranphuquy19/enc-app-view-service:latest
    ports:
      - "8082:8080"
    environment:
      - REDIS_CONNECTION=redis:6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  redis-data: